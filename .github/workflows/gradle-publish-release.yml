name: Maven Deploy & Release

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write # Access to Publish a Release
      packages: write # Access to Publish a Package

    #--------------------------------------------------------------------------------------------
    #           Build the Artifact and Publish to Luxious Repository
    #--------------------------------------------------------------------------------------------
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    # TODO setup env vars for repo auth

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      with:
        gradle-version: '8.4'

    - name: Extract Version from Gradle
      id: extract_version
      run: |
        version=$(gradle properties -q | grep "^version:" | awk '{print $2}')
        echo "::set-output name=version::$version"

    - name: Display Version
      run: echo "Version is ${{ steps.extract_version.outputs.version }}"

    - name: Build with Gradle 8.4
      if: "!endsWith(steps.extract_version.outputs.version, 'SNAPSHOT')"
      env:
        LUXIOUS_NEXUS_USER: ${{ secrets.MAVEN_NAME }}
        LUXIOUS_NEXUS_PASS: ${{ secrets.MAVEN_SECRET }}
      run: gradle publish

    - name: Prepare Spigot Jar
      run: |
        mv spigot-jar/build/libs/spigot-jar-${{ steps.extract_version.outputs.version }}.jar spigot-jar/build/libs/kamicommon-${{ steps.extract_version.outputs.version }}.jar

    #--------------------------------------------------------------------------------------------
    #           Create a Github Release
    #--------------------------------------------------------------------------------------------

    - name: Create Release
      if: "!endsWith(steps.extract_version.outputs.version, 'SNAPSHOT')"
      uses: ncipollo/release-action@v1
      with:
        artifacts: "standalone-utils/build/libs/*.jar,standalone-jar/build/libs/*.jar,spigot-utils/build/libs/*.jar,spigot-jar/build/libs/*.jar,generic-jar/build/libs/*.jar"
        allowUpdates: true
        removeArtifacts: true
        omitBodyDuringUpdate: true
        omitDraftDuringUpdate: true
        omitNameDuringUpdate: true
        omitPrereleaseDuringUpdate: true
        tag: "${{ steps.extract_version.outputs.version }}"

    # Update the README.md Badge with the new version
    - name: Create Version Badge
      if: "!endsWith(steps.extract_version.outputs.version, 'SNAPSHOT')"
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 5dfd7c9bb8b81ae5867c81e9a77ee821
        filename: test.json # Use test.svg if you want to use the SVG mode.
        label: Latest Release
        message: "${{ steps.extract_version.outputs.version }}"
        color: blue